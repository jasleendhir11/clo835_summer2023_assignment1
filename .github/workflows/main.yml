name: Deploy to AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Images to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} 
          aws-region: us-east-1 

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2 

      - name: Build, tag, and push MySQL image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          MYSQL_ECR_REPOSITORY: clo835-mysql # Name of your ECR repository for MySQL
          IMAGE_TAG: mysql2
        run: |
          echo "Building MySQL image..."
          docker build -t $ECR_REGISTRY/$MYSQL_ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile_mysql .
          echo "Pushing MySQL image to ECR..."
          docker push $ECR_REGISTRY/$MYSQL_ECR_REPOSITORY:$IMAGE_TAG
          echo "MySQL image pushed: $ECR_REGISTRY/$MYSQL_ECR_REPOSITORY:$IMAGE_TAG"
      - name: Build, tag, and push Application image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          APP_ECR_REPOSITORY: clo835-webapp # Name of your ECR repository for the application
          IMAGE_TAG: app4
        run: |
          echo "Building Application image..."
          docker build -t $ECR_REGISTRY/$APP_ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          echo "Pushing Application image to ECR..."
          docker push $ECR_REGISTRY/$APP_ECR_REPOSITORY:$IMAGE_TAG
          echo "Application image pushed: $ECR_REGISTRY/$APP_ECR_REPOSITORY:$IMAGE_TAG"
